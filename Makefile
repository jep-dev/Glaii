# Do not edit this file directly. Configuration is done in Makefile.conf.
# Most configuration here honors existing settings.
include Makefile.conf

VARS_SRC:=APP SRC
VARS_INC:=APP INC
VARS_IN:=$(VARS_SRC) INC
VARS_OBJ:=OBJ LIB
VARS_OUT:=DEP $(VARS_OBJ) BIN

# Input locations
ROOT_APP?=app/
ROOT_SRC?=src/
ROOT_INC?=include/
# Output destinations
DEST_DIR?=
ROOT_OBJ?=$(DEST_DIR)obj/
ROOT_DEP?=$(ROOT_OBJ)
ROOT_LIB?=$(DEST_DIR)lib/
ROOT_BIN?=$(DEST_DIR)bin/
ROOTS_SRC:=$(foreach X,$(VARS_SRC),$(ROOT_$(X)))
ROOTS_INC:=$(foreach X,$(VARS_INC),$(ROOT_$(X)))
ROOTS_OBJ:=$(foreach X,$(VARS_OBJ),$(ROOT_$(X)))

define TO_NAME =
$(strip $(foreach X,$(foreach Y,$(1),$(lastword $(subst /, ,$(Y)))),\
	$(basename $(X:lib%=%))))
endef

define TO_FILE =
$(foreach X,$(1),$(ROOT_$(2))$(3)$(call TO_NAME,$(X))$(4))
endef
define TO_FILES =
$(foreach X,$(2),$(call TO_$(X),$(1)))
endef
define TO_APP =
$(call TO_FILE,$(call TO_NAME,$(1)),APP,,.cpp)
endef
define TO_SRC =
$(call TO_FILE,$(call TO_NAME,$(1)),SRC,,.cpp)
endef
define TO_INC =
$(call TO_FILE,$(call TO_NAME,$(1)),INC,,.hpp)
endef
define TO_DEP =
$(call TO_FILE,$(call TO_NAME,$(1)),DEP,,.d)
endef
define TO_TDEP =
$(call TO_FILE,$(call TO_NAME,$(1)),DEP,,.Td)
endef
define TO_OBJ =
$(call TO_FILE,$(call TO_NAME,$(1)),OBJ,,.o)
endef
define TO_LIB =
$(call TO_FILE,$(call TO_NAME,$(1)),LIB,lib,.so)
endef
define TO_BIN =
$(call TO_FILE,$(call TO_NAME,$(1)),BIN,,)
endef

# Ordered discovery generation
$(foreach X,$(VARS_INC),$(eval vpath %.hpp $(ROOT_$(X))))
$(foreach X,$(VARS_SRC),$(eval vpath %.cpp $(ROOT_$(X))))
SPACE:=$(subst , ,)
RPATH:=-Wl,-rpath,$(subst $(SPACE),:,$(ROOTS_OBJ))

override SRCS_BIN+=$(wildcard $(ROOT_APP)*.cpp)
override SRCS_LIB+=$(wildcard $(ROOT_SRC)*.cpp)
override NAMES_BIN+=$(foreach F,$(SRCS_BIN),$(call TO_NAME,$(F)))
override NAMES_LIB+=$(foreach F,$(SRCS_LIB),$(call TO_NAME,$(F)))

override CXXFLAGS+=$(ROOTS_INC:%=-I%) $$(pkg-config --cflags $(REQ_ALL))
override LDLIBS+=$(pkg-config --libs $(REQ_ALL)) -lm -lglbinding -ldl
# override LDFLAGS+=-Wl,-rpath,$(realpath $(ROOT_LIB)):$(realpath $(ROOT_OBJ))
override LDFLAGS+=-Wl,-rpath,$(realpath $(ROOT_LIB))
TARGET?=$(call TO_BIN,$(firstword $(SRCS_BIN)))
default: $(TARGET) $(COMPLETE)

$(foreach N,$(NAMES_BIN),\
	$(eval $(call TO_DEP,$(N)):)\
	$(eval $(call TO_OBJ,$(N)): $(call TO_APP,$(N)))\
	$(eval $(call TO_OBJ,$(N)): \
		$(call TO_FILES,$(N),APP DEP) $(call TO_LIB,$(NAMES_LIB));\
	$(CXX) -MT $$@ -MMD -MP -MF $(call TO_TDEP,$(N)) \
		$(CXXFLAGS) -c $$< -o $$@ \
	&& mv $(call TO_FILES,$(N),TDEP DEP) && touch $$@)\
	$(eval $(call TO_BIN,$(N)): $(call TO_OBJ,$(N));\
		$(CXX) $(LDFLAGS) -o $$@ $$< -lSDL2 -lSDL2_image -lSDL2_ttf \
		$(ROOTS_OBJ:%=-L%) $(NAMES_LIB:%=-l%) $(LDLIBS))\
)
$(foreach N,$(NAMES_LIB),\
	$(eval $(call TO_DEP,$(N)):)\
	$(eval $(call TO_OBJ,$(N)): $(call TO_SRC,$(N)))\
	$(eval $(call TO_OBJ,$(N)): $(call TO_FILES,$(N),SRC INC DEP);\
	$(CXX) -MT $$@ -MMD -MP -MF $(call TO_TDEP,$(N)) \
		$(CXXFLAGS) -fPIC -c $$< -o $$@ \
	&& mv $(call TO_FILES,$(N),TDEP DEP) && touch $$@)\
	$(eval $(call TO_LIB,$(N)): $(call TO_OBJ,$(N));\
		$(CXX) $(LDFLAGS) -shared -o $$@ $$< $(ROOTS_OBJ:%=-L%) $(LDLIBS))\
)

# %.d:
$(COMPLETE): $(call TO_OBJ,$(NAMES_LIB) $(NAMES_BIN))
	@echo $(CXXFLAGS) > $@
.PRECIOUS: %.d $(COMPLETE)

var-%:; @echo '$$($*)=$($*)'
clean-%:; @rm -i -f $(wildcard $* $(call TO_FILES,$*,$(VARS_OUT)))
clean: $(foreach X,$(NAMES_BIN) $(NAMES_LIB) $(COMPLETE),clean-$(X))
.PHONY: var-% clean-% clean

include Doxygen.mk
include $(wildcard $(foreach N,$(NAMES_BIN) $(NAMES_LIB),$(call TO_DEP,$(N))))
